{"version":3,"sources":["constants/userConstants.js","constants/orderConstants.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","constants/productConstants.js","actions/productActions.js","components/Loader.js","components/Message.js","components/Paginate.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","constants/cartConstants.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","getUserDetails","id","dispatch","getState","a","type","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","response","detail","message","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","className","Button","variant","Header","useSelector","state","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","localStorage","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","Product","product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAILED","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAILED","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAILED","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAILED","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAILED","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAILED","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAILED","listProducts","listProductDetails","Loader","Spinner","animation","role","height","width","margin","display","Message","console","log","Alert","children","Paginate","pages","page","split","Pagination","Array","keys","map","x","active","ProductCarousel","productTopRated","error","loading","products","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","productList","search","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","productDetails","productCreateReview","loadingProductReview","errorProductReview","successProductReview","success","params","ListGroup","description","countInStock","xs","vlue","disabled","reviews","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","addToCart","setItem","JSON","stringify","cart","cartItems","CartScreen","Number","removeFromCartHandler","removeFromCart","item","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","required","ProfileScreen","userDetails","user","userUpdateProfile","orderListMy","loadingOrders","errorOrders","orders","put","updateUserProfile","Table","striped","responsive","order","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","paymentMethod","setPaymentMethod","Check","label","checked","bariant","PlaceOrderScreen","orderCreate","itemsPrice","shippingPrice","taxPrice","index","createOrder","orderItems","OrderScreen","orderId","sdkReady","setSdkReady","orderDetails","orderPay","loadingPay","successPay","orderDeliver","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","href","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","userList","users","successDelete","userDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","userUpdate","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","productDelete","loadingDelete","errorDelete","productCreate","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","productUpdate","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","orderList","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","existItem","find","filter","cartItemsFromStorage","getItem","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","defaults","baseURL","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1c529083.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST' \r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS' \r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL' \r\nexport const USER_LOGOUT = 'USER_LOGOUT' \r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST' \r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS' \r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL' \r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST' \r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS' \r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL' \r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET' \r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST' \r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS' \r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL' \r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET' \r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST' \r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS' \r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL' \r\nexport const USER_LIST_RESET = 'USER_LIST_RESET' \r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST' \r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS' \r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL' \r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST' \r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS' \r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL' \r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET' ","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET' \r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET' \r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET' \r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET' \r\n\r\n","import {USER_LOGIN_REQUEST,\r\n        USER_LOGIN_SUCCESS,\r\n        USER_LOGIN_FAIL,\r\n        USER_LOGOUT,\r\n        USER_REGISTER_REQUEST,\r\n        USER_REGISTER_SUCCESS,\r\n        USER_REGISTER_FAIL,\r\n        USER_DETAILS_REQUEST,\r\n        USER_DETAILS_SUCCESS,\r\n        USER_DETAILS_FAIL,\r\n        USER_UPDATE_PROFILE_REQUEST,\r\n        USER_UPDATE_PROFILE_SUCCESS,\r\n        USER_UPDATE_PROFILE_FAIL,\r\n        USER_UPDATE_PROFILE_RESET,\r\n        USER_DETAILS_RESET,\r\n        USER_LIST_REQUEST,\r\n        USER_LIST_SUCCESS,\r\n        USER_LIST_FAIL,\r\n        USER_LIST_RESET,\r\n        USER_DELETE_REQUEST,\r\n        USER_DELETE_SUCCESS,\r\n        USER_DELETE_FAIL,\r\n        USER_UPDATE_REQUEST,\r\n        USER_UPDATE_SUCCESS,\r\n        USER_UPDATE_FAIL,\r\n} from '../constants/userConstants'\r\nimport axios from 'axios'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'  \r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type:USER_LOGIN_REQUEST \r\n        })\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n        const {data} = await axios.post(\r\n            '/api/users/login/',\r\n            {\"username\":email, \"password\":password},\r\n            config\r\n        )\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch(error) {\r\n        dispatch({\r\n            type:USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail \r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type:USER_LOGOUT})\r\n    dispatch({type:USER_DETAILS_RESET})\r\n    dispatch({type:ORDER_LIST_MY_RESET})\r\n    dispatch({type:USER_LIST_RESET})\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type:USER_REGISTER_REQUEST \r\n        })\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n        const {data} = await axios.post(\r\n            '/api/users/register/',\r\n            {\"name\": name, \"email\":email, \"password\":password},\r\n            config\r\n        )\r\n        dispatch({\r\n            type:USER_REGISTER_SUCCESS,\r\n            payload:data\r\n        })\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch(error) {\r\n        dispatch({\r\n            type:USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail \r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type:USER_DETAILS_REQUEST \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type:USER_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n    } catch(error) {\r\n        dispatch({\r\n            type:USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail \r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_REQUEST \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_SUCCESS,\r\n            payload:data\r\n        })\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch(error) {\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail \r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type:USER_LIST_REQUEST \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type:USER_LIST_SUCCESS,\r\n            payload:data\r\n        })\r\n        \r\n    } catch(error) {\r\n        dispatch({\r\n            type:USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail \r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type:USER_DELETE_REQUEST \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.delete(\r\n            `/api/users/delete/${id}`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type:USER_DELETE_SUCCESS,\r\n            payload:data\r\n        })\r\n        \r\n    } catch(error) {\r\n        dispatch({\r\n            type:USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail \r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type:USER_UPDATE_REQUEST \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.put(\r\n            `/api/users/update/${user.id}/`,\r\n            user,\r\n            config\r\n        )\r\n        dispatch({\r\n            type:USER_UPDATE_SUCCESS,\r\n        })\r\n        dispatch({\r\n            type:USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch(error) {\r\n        dispatch({\r\n            type:USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail \r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            >                \r\n            </Form.Control>\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import React from 'react'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout } from '../actions/userActions';\r\nimport SearchBox from './SearchBox'\r\n\r\nfunction Header() {\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>ProShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <SearchBox/>\r\n\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link><i className=\"fas fa-shopping-cart\"></i> Cart</Nav.Link>\r\n                            </LinkContainer>\r\n                            \r\n                            {\r\n                                userInfo ? (\r\n                                    <NavDropdown title={userInfo.name} id='username'>\r\n                                        <LinkContainer to='/profile'>\r\n                                            <NavDropdown.Item>Profile</NavDropdown.Item>                                        \r\n                                        </LinkContainer>\r\n                                        <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                    </NavDropdown>\r\n                                ) : (\r\n                                    <LinkContainer to='/login'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                                    </LinkContainer>\r\n                                )\r\n                            }\r\n\r\n                            {\r\n                                userInfo && userInfo.isAdmin && (\r\n                                    <NavDropdown title='Admin' id='adminmenu'>\r\n                                        <LinkContainer to='/admin/userlist'>\r\n                                            <NavDropdown.Item>Users</NavDropdown.Item>                                        \r\n                                        </LinkContainer>\r\n\r\n                                        <LinkContainer to='/admin/productList'>\r\n                                            <NavDropdown.Item>Produts</NavDropdown.Item>                                        \r\n                                        </LinkContainer>\r\n\r\n                                        <LinkContainer to='/admin/orderlist'>\r\n                                            <NavDropdown.Item>Orders</NavDropdown.Item>                                        \r\n                                        </LinkContainer>\r\n                                    </NavDropdown>\r\n                                )\r\n                            }\r\n\r\n                            \r\n                        </Nav>\r\n                        \r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copytight &copy; ProShop</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nfunction Rating({value, text, color}) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n\r\n            <span> {text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image}/>\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'}/>\r\n                    </div>\r\n                </Card.Text>\r\n                <Card.Text as=\"h3\">\r\n                    ${product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAILED = 'PRODUCT_LIST_FAILED'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAILED = 'PRODUCT_DETAILS_FAILED'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAILED = 'PRODUCT_DELETE_FAILED'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAILED = 'PRODUCT_CREATE_FAILED'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAILED = 'PRODUCT_UPDATE_FAILED'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAILED = 'PRODUCT_CREATE_REVIEW_FAILED'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAILED = 'PRODUCT_TOP_FAILED'","import { PRODUCT_LIST_REQUEST,  \r\n        PRODUCT_LIST_SUCCESS, \r\n        PRODUCT_LIST_FAILED,\r\n        PRODUCT_DETAILS_REQUEST,  \r\n        PRODUCT_DETAILS_SUCCESS, \r\n        PRODUCT_DETAILS_FAILED,\r\n        PRODUCT_DELETE_REQUEST,  \r\n        PRODUCT_DELETE_SUCCESS, \r\n        PRODUCT_DELETE_FAILED,\r\n        PRODUCT_CREATE_REQUEST,  \r\n        PRODUCT_CREATE_SUCCESS, \r\n        PRODUCT_CREATE_FAILED,\r\n        PRODUCT_UPDATE_REQUEST,  \r\n        PRODUCT_UPDATE_SUCCESS, \r\n        PRODUCT_UPDATE_FAILED,\r\n        PRODUCT_UPDATE_RESET,\r\n        PRODUCT_CREATE_REVIEW_REQUEST,  \r\n        PRODUCT_CREATE_REVIEW_SUCCESS, \r\n        PRODUCT_CREATE_REVIEW_FAILED,\r\n        PRODUCT_CREATE_REVIEW_RESET,\r\n        PRODUCT_TOP_REQUEST,  \r\n        PRODUCT_TOP_SUCCESS, \r\n        PRODUCT_TOP_FAILED,\r\n} from '../constants/productConstants'\r\nimport axios from 'axios'\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({type:PRODUCT_LIST_REQUEST})\r\n        const { data } = await axios.get(`/api/products/${keyword}`)\r\n        dispatch({\r\n            type:PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type:PRODUCT_LIST_FAILED,\r\n            payload: error.response && error.response.data.detail \r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({type:PRODUCT_TOP_REQUEST})\r\n        const { data } = await axios.get(`/api/products/top`)\r\n        dispatch({\r\n            type:PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type:PRODUCT_TOP_FAILED,\r\n            payload: error.response && error.response.data.detail \r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({type:PRODUCT_DETAILS_REQUEST})\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n        dispatch({\r\n            type:PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type:PRODUCT_DETAILS_FAILED,\r\n            payload: error.response && error.response.data.detail \r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type:PRODUCT_DELETE_REQUEST \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type:PRODUCT_DELETE_SUCCESS,\r\n        })\r\n   \r\n    } catch(error) {\r\n        dispatch({\r\n            type:PRODUCT_DELETE_FAILED,\r\n            payload: error.response && error.response.data.detail \r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type:PRODUCT_CREATE_REQUEST \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type:PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n   \r\n    } catch(error) {\r\n        dispatch({\r\n            type:PRODUCT_CREATE_FAILED,\r\n            payload: error.response && error.response.data.detail \r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type:PRODUCT_UPDATE_REQUEST \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type:PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type:PRODUCT_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n   \r\n    } catch(error) {\r\n        dispatch({\r\n            type:PRODUCT_UPDATE_FAILED,\r\n            payload: error.response && error.response.data.detail \r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type:PRODUCT_CREATE_REVIEW_REQUEST \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type:PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n   \r\n    } catch(error) {\r\n        dispatch({\r\n            type:PRODUCT_CREATE_REVIEW_FAILED,\r\n            payload: error.response && error.response.data.detail \r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner \r\n            animation=\"border\" \r\n            role='status' \r\n            style={{\r\n                height:'100px',\r\n                width:'100px',\r\n                margin:'auto',\r\n                display:'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message(variant) {\r\n    console.log(variant)\r\n    return (\r\n        <Alert \r\n            variant={variant.variant}\r\n        >\r\n            {variant.children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({pages, page, keyword='', isAdmin=false}) {\r\n    if(keyword){\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n    return(pages > 1 && (\r\n            <Pagination>\r\n                {\r\n                    [...Array(pages).keys()].map((x) => (\r\n                        <LinkContainer \r\n                            key={x+1}\r\n                            to={\r\n                                !isAdmin ? `/?keyword=${keyword}&page=${x+1}`\r\n                                : `/admin/productlist/?keyword=${keyword}&page=${x+1}`\r\n\r\n                            }\r\n                        >\r\n                            <Pagination.Item active={x+1 === page}>{x+1}</Pagination.Item>\r\n                        </LinkContainer>\r\n                    ))\r\n                }\r\n            </Pagination>\r\n        )\r\n        \r\n    )\r\n}\r\n\r\nexport default Paginate","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const {error, loading, products} = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return(\r\n        loading ? (\r\n            <Loader/>\r\n        ) : error ? (\r\n            <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n            <Carousel pause='hover' className='bg-dark'>\r\n                {\r\n                    products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid/>\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{product.name} (${product.price})</h4>\r\n                                </Carousel.Caption>                                \r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))\r\n                }\r\n            </Carousel>\r\n        )\r\n    )\r\n}\r\n\r\nexport default ProductCarousel","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\n//import products from '../products'\r\nimport Product from '../components/Product'\r\n//import axios from 'axios'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProducts } from '../actions/productActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\n\r\n\r\nfunction HomeScreen({history}) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const {error, loading, products, page, pages} = productList\r\n    \r\n    let keyword = history.location.search\r\n    \r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n    }, [dispatch, keyword])\r\n    return (\r\n        <div>\r\n            {(keyword.split('&')[0].split('=')[1] == '' || !keyword) && <ProductCarousel/>}\r\n            \r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader/>\r\n                : error ? <Message variant=\"danger\">{error}</Message> \r\n                : \r\n                <div>\r\n                    <Row>\r\n                        {products.map((product) => (\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                    <Paginate page={page} pages={pages} keyword={keyword} />\r\n                </div>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card   , Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating';\r\n//mport products from '../products';\r\n//import axios from 'axios'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n    //const product = products.find((p) => p._id == match.params.id)\r\n    //const [product, setProduct] = useState([])\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {loading, error, product} = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const productCreateReview = useSelector(state => state.productCreateReview)\r\n    const {loading:loadingProductReview, error:errorProductReview, success:successProductReview} = productCreateReview\r\n\r\n\r\n    useEffect(() => {\r\n        if(successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({type:PRODUCT_CREATE_REVIEW_RESET})\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id,\r\n            {\r\n                rating,\r\n                comment\r\n            }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/\" className=\"btn btn-light my-3\">Go Back</Link>\r\n            {\r\n                loading ? <Loader/>\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                : \r\n                (\r\n                    <div>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <ListGroup variant=\"flush\">\r\n                                    <ListGroup.Item>\r\n                                        <h3>{product.name}</h3>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'}/>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        Price: ${product.price}\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        Description: {product.description}\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n\r\n                            <Col md={3}>\r\n                                <Card>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Price:</Col>\r\n                                                <Col><strong>${product.price}</strong></Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Status</Col>\r\n                                                <Col><strong>{product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}</strong></Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                        {product.countInStock > 0 && (\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Quantity:</Col>\r\n                                                    <Col xs='auto' className='my-1'>\r\n                                                        <Form.Control\r\n                                                            as=\"select\"\r\n                                                            vlue={qty}\r\n                                                            onChange={(e) => setQty(e.target.value)}\r\n                                                        >\r\n                                                            {\r\n                                                                [...Array(product.countInStock).keys()]\r\n                                                                .map((x) => (\r\n                                                                    <option key={x+1} value={x+1}>\r\n                                                                        {x+1}\r\n                                                                    </option>\r\n                                                                ))\r\n                                                            }\r\n                                                        </Form.Control>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        )}\r\n                                        \r\n                                        <ListGroup.Item>\r\n                                            <Button \r\n                                                onClick={addToCartHandler}\r\n                                                className=\"btn-block\" \r\n                                                type=\"button\" \r\n                                                disabled={product.countInStock == 0}\r\n                                            >\r\n                                                Add to Cart\r\n                                            </Button>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <h4>Reviews</h4>\r\n                                {product.reviews.length == 0 && <Message variant='info'>No reviews</Message>}\r\n                                <ListGroup variant='flush'>\r\n                                    {\r\n                                        product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825'/>\r\n                                                <p>{review.createdAt.substring(0,10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))\r\n                                    }     \r\n                                    <ListGroup.Item>\r\n                                        <h4>Write a review</h4>\r\n                                        {loadingProductReview && <Loader/>}\r\n                                        {successProductReview && <Message variant='success'>Review Submited</Message>}\r\n                                        {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n                                        {\r\n                                            userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excelent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        >\r\n\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n                                                </Form>\r\n                                            ) : (\r\n                                                <Message variant='info'>Please <Link to='/login'>Login</Link> to write a review</Message>\r\n                                            )\r\n                                        }    \r\n                                    </ListGroup.Item>                  \r\n                                </ListGroup>                            \r\n                            </Col>                             \r\n                        </Row>                                  \r\n                    </div>\r\n                )\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","export const CART_ADD_ITEM = 'CARD_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CARD_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'\r\n\r\n","import axios from 'axios'\r\nimport {CART_ADD_ITEM,\r\n        CART_REMOVE_ITEM, \r\n        CART_SAVE_SHIPPING_ADDRESS,\r\n        CART_SAVE_PAYMENT_METHOD\r\n } from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) =>  async (dispatch, getState) => {\r\n    const {data} = await axios.get(`/api/products/${id}`)\r\n    dispatch({\r\n        type:CART_ADD_ITEM,\r\n        payload:{\r\n            product:data._id,\r\n            name:data.name,\r\n            image:data.image,\r\n            price:data.price,\r\n            countInStock:data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id, \r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n} \r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data, \r\n    })\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n} \r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data, \r\n    })\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n} \r\n","import React, {useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart \r\n\r\n    useEffect(() => {\r\n        if(productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {\r\n                    cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to=\"/\">Go Back</Link>\r\n                    </Message>\r\n                    ) : (\r\n                        <ListGroup variant=\"flush\">\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                            ${item.price}\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                value={item.qty}\r\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                                {\r\n                                                    [...Array(item.countInStock).keys()]\r\n                                                    .map((x) => (\r\n                                                        <option key={x+1} value={x+1}>\r\n                                                            {x+1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                        <Col md={1}>\r\n                                            <Button\r\n                                                type=\"button\"\r\n                                                variant=\"light\"\r\n                                                onClick={() => removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className=\"fas fa-trash\"></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )\r\n                }\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                                type=\"button\"\r\n                                className=\"btn-block\"\r\n                                disabled={cartItems.length === 0}\r\n                                onClick={checkoutHandler}\r\n                            >\r\n                                Proceed To Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({children}) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen({location, history}) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {error, loading, userInfo} = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n    \r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button\r\n                    type='submit'\r\n                    variant='primary'\r\n                >\r\n                    SingIn\r\n                </Button>\r\n                \r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    New Costumer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const {error, loading, userInfo} = userRegister\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password != confirmPassword){\r\n            setMessage('Passwords do not Match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <FormContainer>\r\n            <h1>Register</h1>\r\n            {message && <Message variant=\"danger\">{message}</Message>}\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button\r\n                    type='submit'\r\n                    variant='primary'\r\n                >\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Have an Account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Sign In</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({history}) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {error, loading, user} = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const {success} = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const {loading:loadingOrders, error:errorOrders, orders} = orderListMy\r\n\r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if(!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({type:USER_UPDATE_PROFILE_RESET})\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password != confirmPassword){\r\n            setMessage('Passwords do not Match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                \"id\":user._id, \r\n                \"name\": name,\r\n                \"email\":email,\r\n                \"password\":password,\r\n            }))\r\n            setMessage('')\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant=\"danger\">{message}</Message>}\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n                {loading && <Loader/>}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter Name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button\r\n                        type='submit'\r\n                        variant='primary'\r\n                    >\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {\r\n                    loadingOrders ? (\r\n                        <Loader/>\r\n                    ) : errorOrders ? (\r\n                        <Message variant='danger'>{error}</Message>\r\n                    ) : (\r\n                        <Table striped responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Data</th>\r\n                                    <th>Total</th>\r\n                                    <th>Paid</th>\r\n                                    <th>Delivered</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    orders.map(order => (\r\n                                        <tr key={order._id}>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                                            <td>${order.totalPrice}</td>\r\n                                            <td>\r\n                                                {\r\n                                                    order.isPaid ? order.paidAt.substring(0, 10) \r\n                                                    : <i className='fas fa-times' style={{color:'red'}}></i>\r\n                                                }\r\n                                            </td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button className='btn-sm'>Details</Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n                }\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type:ORDER_CREATE_REQUEST \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n        dispatch({\r\n            type:ORDER_CREATE_SUCCESS,\r\n            payload:data\r\n        })\r\n        dispatch({\r\n            type:CART_CLEAR_ITEMS,\r\n            payload:data\r\n        })\r\n        localStorage.removeItem('cartItems')\r\n   \r\n    } catch(error) {\r\n        dispatch({\r\n            type:ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail \r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type:ORDER_DETAILS_REQUEST \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type:ORDER_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n   \r\n    } catch(error) {\r\n        dispatch({\r\n            type:ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail \r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type:ORDER_PAY_REQUEST \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n        dispatch({\r\n            type:ORDER_PAY_SUCCESS,\r\n            payload:data\r\n        })\r\n   \r\n    } catch(error) {\r\n        dispatch({\r\n            type:ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail \r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type:ORDER_LIST_MY_REQUEST \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type:ORDER_LIST_MY_SUCCESS,\r\n            payload:data\r\n        })\r\n   \r\n    } catch(error) {\r\n        dispatch({\r\n            type:ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail \r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type:ORDER_LIST_REQUEST \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type:ORDER_LIST_SUCCESS,\r\n            payload:data\r\n        })\r\n   \r\n    } catch(error) {\r\n        dispatch({\r\n            type:ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail \r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type:ORDER_DELIVER_REQUEST \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type:ORDER_DELIVER_SUCCESS,\r\n            payload:data\r\n        })\r\n   \r\n    } catch(error) {\r\n        dispatch({\r\n            type:ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail \r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({step1, step2, step3, step4}) {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {\r\n                    step1 ? (\r\n                        <LinkContainer to='/login'>\r\n                            <Nav.Link>Login</Nav.Link>\r\n                        </LinkContainer>\r\n                    ) : (                \r\n                        <Nav.Link disabled>Login</Nav.Link>                        \r\n                    )\r\n                }\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {\r\n                    step2 ? (\r\n                        <LinkContainer to='/shipping'>\r\n                            <Nav.Link>Shipping</Nav.Link>\r\n                        </LinkContainer>\r\n                    ) : (\r\n                        <Nav.Link disabled>Shipping</Nav.Link>\r\n                    )\r\n                }\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {\r\n                    step3 ? (\r\n                        <LinkContainer to='/payment'>\r\n                            <Nav.Link>Payment</Nav.Link>\r\n                        </LinkContainer>\r\n                    ) : (\r\n                        <Nav.Link disabled>Payment</Nav.Link>\r\n                    )\r\n                }\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {\r\n                    step4 ? (\r\n                        <LinkContainer to='/placeorder'>\r\n                            <Nav.Link>Place Order</Nav.Link>\r\n                        </LinkContainer>\r\n                    ) : (\r\n                        <Nav.Link disabled>Place Order</Nav.Link>\r\n                    )\r\n                }\r\n                \r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\nfunction ShippingScreen({ history }) {\r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({address, city, postalCode, country}))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2/>\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter City'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Postal Code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button\r\n                    type='submit'\r\n                    variant='primary'\r\n                >\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\nfunction PaymentScreen({history}) {\r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal') \r\n\r\n    if(!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    } \r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3/>   \r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Button\r\n                    type='submit'\r\n                    bariant='primary'\r\n                >\r\n                    Continue\r\n                </Button>\r\n            </Form>         \r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { Link } from 'react-router-dom'\r\nimport Message from '../components/Message'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\n\r\nfunction PlaceOrderScreen({history}) {\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const {order, error, success} = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = (Number(cart.itemsPrice) * 0.082).toFixed(2)\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    if(!cart.paymentMethod){\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(success){\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step2 step4/>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                                {' '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {' '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {\r\n                                cart.cartItems.length === 0 ? (\r\n                                    <Message variant='info'>Your cart is empty</Message>\r\n                                ) : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {\r\n                                            cart.cartItems.map((item, index) => (\r\n                                                <ListGroup.Item key={index}>\r\n                                                    <Row>\r\n                                                        <Col md={1}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                        </Col>\r\n                                                        <Col>\r\n                                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            {item.qty} X ${item.price} = {(item.qty * item.price).toFixed(2)} \r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            ))\r\n                                        }\r\n                                        \r\n                                    </ListGroup>\r\n                                )\r\n                            }\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                \r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {\r\n                                    error && <Message variant='danger'>{error}</Message>\r\n                                }\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button \r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Message from '../components/Message'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport Loader from '../components/Loader'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen({match, history}) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const {order, error, loading} = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const {loading: loadingPay, success: successPay} = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const {loading: loadingDeliver, success: successDeliver} = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    if(!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = \"https://www.paypal.com/sdk/js?client-id=AbCV7KtKY8fXf8NdS5frqySigofSAH4SAQ75T1pMK0fj_ZKeEVqdYeQQPsrW0Xj_QSXrwfxdB2sCDVRa\"\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        if(!order || successPay || order._id !== Number(orderId) || successDeliver) {\r\n            dispatch({type:ORDER_PAY_RESET})\r\n            dispatch({type:ORDER_DELIVER_RESET})\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if(!order.isPaid) {\r\n            if(!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader/>\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n        <div>\r\n            <h1>Order: {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name: </strong>{order.user.name}</p>\r\n                            <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city}\r\n                                {' '}\r\n                                {order.shippingAddress.postalCode},\r\n                                {' '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n\r\n                            {\r\n                                order.isDelivered ? (\r\n                                    <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                                ) : (\r\n                                    <Message variant='warning'>Not Delivered</Message>\r\n                                )\r\n                            }\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {\r\n                                order.isPaid ? (\r\n                                    <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                ) : (\r\n                                    <Message variant='warning'>Not Paid</Message>\r\n                                )\r\n                            }\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {\r\n                                order.orderItems.length === 0 ? (\r\n                                    <Message variant='info'>Your order is empty</Message>\r\n                                ) : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {\r\n                                            order.orderItems.map((item, index) => (\r\n                                                <ListGroup.Item key={index}>\r\n                                                    <Row>\r\n                                                        <Col md={1}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                        </Col>\r\n                                                        <Col>\r\n                                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            {item.qty} X ${item.price} = {(item.qty * item.price).toFixed(2)} \r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            ))\r\n                                        }\r\n                                        \r\n                                    </ListGroup>\r\n                                )\r\n                            }\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                \r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {\r\n                                !order.isPaid && (\r\n                                    <ListGroup.Item>\r\n                                        {loadingPay && <Loader/>}\r\n                                        {\r\n                                            !sdkReady ? (\r\n                                                <Loader/>\r\n                                            ) : (\r\n                                                <PayPalButton\r\n                                                    amount={order.totalPrice}\r\n                                                    onSuccess={successPaymentHandler}\r\n                                                />\r\n                                            )\r\n                                        }\r\n                                    </ListGroup.Item>\r\n                                )\r\n                            }\r\n\r\n                        </ListGroup>\r\n                        {loadingDeliver && <Loader/>}\r\n                        {\r\n                            userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                <ListGroup.Item>\r\n                                    <Button\r\n                                        type='button'\r\n                                        className='btn btn-block' \r\n                                        onClick={deliverHandler}\r\n                                    >\r\n                                        Mark As Delivered\r\n                                    </Button>\r\n                                </ListGroup.Item>\r\n                            )\r\n                        }\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { register } from '../actions/userActions'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\n\r\nfunction UserListScreen({history}) {\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const {loading, error, users} = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const {success:successDelete} = userDelete\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {\r\n                loading ? (\r\n                    <Loader/>\r\n                ) : error ? (\r\n                    <Message variant='danger'>{error}</Message>\r\n                ) : (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>EMAIL</th>\r\n                                <th>ADMIN</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>\r\n                                            {\r\n                                                user.isAdmin ? (\r\n                                                    <i className='fas fa-check' style={{color:'green'}}></i>\r\n                                                ) : (\r\n                                                    <i className='fas fa-times' style={{color:'red'}}></i>\r\n                                                )\r\n                                            }\r\n                                        </td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit/`}>\r\n                                                <Button \r\n                                                    variant='light'\r\n                                                    className='btn-sm'\r\n                                                >\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                            <Button \r\n                                                    variant='danger'\r\n                                                    className='btn-sm'\r\n                                                    onClick={() => deleteHandler(user._id)}\r\n                                                >\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'      \r\n\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {error, loading, user} = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const {error:errorUpdate, loading:loadingUpdate, success:successUpdate} = userUpdate\r\n\r\n    useEffect(() => {\r\n        if(successUpdate) {\r\n            dispatch({type: USER_UPDATE_RESET})\r\n            history.push('/admin/userlist/')\r\n        } else {\r\n            if(!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        } \r\n    }, [userId, user, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({id:user.id, name, email, isAdmin}))        \r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist/'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader/>}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {\r\n                    loading ? (\r\n                        <Loader/>\r\n                    ) : error ? (\r\n                        <Message variant='danger'>{error}</Message>\r\n                    ) : (\r\n                        <Form onSubmit={submitHandler}>\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type='name'\r\n                                    placeholder='Enter Name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isAdmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button\r\n                                type='submit'\r\n                                variant='primary'\r\n                            >\r\n                                Update\r\n                            </Button>\r\n                        </Form>\r\n                    )\r\n                }\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\nimport Paginate from '../components/Paginate'\r\n\r\n\r\nfunction ProductListScreen({history, match}) {\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const {loading, error, products, pages, page} = productList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const {loading:loadingDelete, error:errorDelete, success:successDelete} = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const {loading:loadingCreate, error:errorCreate, success:successCreate, product:createdProduct} = productCreate\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch({type:PRODUCT_CREATE_RESET})\r\n        if(!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        } \r\n        if(successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = (product) => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button\r\n                        className='my-3'\r\n                        onClick={createProductHandler}\r\n                    >\r\n                        <i className='fas fa-plus'></i> Create Product \r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader/>}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n            {loadingCreate && <Loader/>}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {\r\n                loading ? (\r\n                    <Loader/>\r\n                ) : error ? (\r\n                    <Message variant='danger'>{error}</Message>\r\n                ) : (\r\n                    <div>\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>PRICE</th>\r\n                                    <th>CATEGORY</th>\r\n                                    <th>BRAND</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    products.map(product => (\r\n                                        <tr key={product._id}>\r\n                                            <td>{product._id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>{product.price}</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td>{product.brand}</td>\r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/product/${product._id}/edit/`}>\r\n                                                    <Button \r\n                                                        variant='light'\r\n                                                        className='btn-sm'\r\n                                                    >\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n                                                <Button \r\n                                                        variant='danger'\r\n                                                        className='btn-sm'\r\n                                                        onClick={() => deleteHandler(product._id)}\r\n                                                    >\r\n                                                        <i className='fas fa-trash'></i>\r\n                                                    </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                        <Paginate pages={pages} page={page} isAdmin={true}></Paginate>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'   \r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'   \r\nimport axios from 'axios'\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {error, loading, product} = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const {error:errorUpdate, loading:loadingUpdate, success:successUpdate} = productUpdate\r\n\r\n    useEffect(() => {\r\n        if(successUpdate) {\r\n            dispatch({type:PRODUCT_UPDATE_RESET})\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if(!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n    }, [dispatch, productId, product, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id:productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n        setUploading(true)\r\n        try {\r\n            const config = {\r\n                headers:{\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n            const {data} = await axios.post('/api/products/upload/', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch(error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist/'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader/>} \r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {\r\n                    loading ? (\r\n                        <Loader/>\r\n                    ) : error ? (\r\n                        <Message variant='danger'>{error}</Message>\r\n                    ) : (\r\n                        <Form onSubmit={submitHandler}>\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type='name'\r\n                                    placeholder='Enter Name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n                                    type='number'\r\n                                    placeholder='Enter Price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                                <Form.File\r\n                                    id='image-field'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader/>}\r\n                            </Form.Group>\r\n                            \r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='CountInStock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n                                    type='number'\r\n                                    placeholder='Enter Stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Button\r\n                                type='submit'\r\n                                variant='primary'\r\n                            >\r\n                                Update\r\n                            </Button>\r\n                        </Form>\r\n                    )\r\n                }\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { register } from '../actions/userActions'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\n\r\nfunction OrderListScreen({history}) {\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const {loading, error, orders} = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {\r\n                loading ? (\r\n                    <Loader/>\r\n                ) : error ? (\r\n                    <Message variant='danger'>{error}</Message>\r\n                ) : (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>USER</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n                                        <td>\r\n                                            {\r\n                                                order.isPaid ? (\r\n                                                    order.paidAt.substring(0, 10)\r\n                                                ) : (\r\n                                                    <i className='fas fa-times' style={{color:'red'}}></i>\r\n                                                )\r\n                                            }\r\n                                        </td>\r\n                                        <td>\r\n                                            {\r\n                                                order.isDelivered ? (\r\n                                                    order.deliveredAt.substring(0, 10)\r\n                                                ) : (\r\n                                                    <i className='fas fa-times' style={{color:'red'}}></i>\r\n                                                )\r\n                                            }\r\n                                        </td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}/`}>\r\n                                                <Button \r\n                                                    variant='light'\r\n                                                    className='btn-sm'\r\n                                                >\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                            \r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import { Container } from \"react-bootstrap\"\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header/>\n      <main className=\"py-3\">\n        <Container>\n          <Route path=\"/\" component={HomeScreen} exact/>\n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path=\"/login/\" component={LoginScreen} />\n          <Route path=\"/register/\" component={RegisterScreen} />\n          <Route path=\"/profile/\" component={ProfileScreen} />\n          <Route path=\"/shipping/\" component={ShippingScreen} />\n          <Route path=\"/payment/\" component={PaymentScreen} />\n          <Route path=\"/placeorder/\" component={PlaceOrderScreen} />\n          <Route path=\"/order/:id\" component={OrderScreen} />\n          <Route path=\"/admin/userlist/\" component={UserListScreen} />\n          <Route path=\"/admin/user/:id/edit/\" component={UserEditScreen} />\n          <Route path=\"/admin/productlist/\" component={ProductListScreen} />\n          <Route path=\"/admin/product/:id/edit/\" component={ProductEditScreen} />\n          <Route path=\"/admin/orderlist/\" component={OrderListScreen} />\n          \n        </Container>\n      </main>\n      <Footer/>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {productListReducer,\r\n        productDetailsReducer,\r\n        productDeleteReducer,\r\n        productCreateReducer,\r\n        productUpdateReducer,\r\n        productCreateReviewReducer,\r\n        productTopRatedReducer,\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {userLoginReducer, \r\n        userRegisterReducer, \r\n        userDetailsReducer, \r\n        userUpdateProfileReducer,\r\n        userListReducer,\r\n        userDeleteReducer,\r\n        userUpdateReducer\r\n} from './reducers/userReducers'\r\nimport {orderCreateReducer,\r\n        orderDetailsReducer,\r\n        orderPayReducer,\r\n        orderListMyReducer,\r\n        orderListReducer,\r\n        orderDeliverReducer\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({ \r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,  \r\n    productCreateReview: productCreateReviewReducer,\r\n    productTopRated: productTopRatedReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart: {cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage},\r\n    userLogin: {userInfo: userInfoFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import { PRODUCT_LIST_REQUEST,  \r\n        PRODUCT_LIST_SUCCESS, \r\n        PRODUCT_LIST_FAILED,\r\n        PRODUCT_DETAILS_REQUEST,  \r\n        PRODUCT_DETAILS_SUCCESS, \r\n        PRODUCT_DETAILS_FAILED,\r\n        PRODUCT_DELETE_REQUEST,  \r\n        PRODUCT_DELETE_SUCCESS, \r\n        PRODUCT_DELETE_FAILED,\r\n        PRODUCT_CREATE_REQUEST,  \r\n        PRODUCT_CREATE_SUCCESS, \r\n        PRODUCT_CREATE_FAILED,\r\n        PRODUCT_CREATE_RESET,\r\n        PRODUCT_UPDATE_REQUEST,  \r\n        PRODUCT_UPDATE_SUCCESS, \r\n        PRODUCT_UPDATE_FAILED,\r\n        PRODUCT_UPDATE_RESET,\r\n        PRODUCT_CREATE_REVIEW_REQUEST,  \r\n        PRODUCT_CREATE_REVIEW_SUCCESS, \r\n        PRODUCT_CREATE_REVIEW_FAILED,\r\n        PRODUCT_CREATE_REVIEW_RESET,\r\n        PRODUCT_TOP_REQUEST,  \r\n        PRODUCT_TOP_SUCCESS, \r\n        PRODUCT_TOP_FAILED,\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer =  (state={products:[]}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return {loading:true, products:[]}\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading:false, \r\n                products: action.payload.products, \r\n                page:action.payload.page, \r\n                pages:action.payload.pages\r\n            }\r\n        case PRODUCT_LIST_FAILED:\r\n            return {loading:false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer =  (state={product:{reviews:[]}}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {loading:true, ...state}\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {loading:false, product: action.payload}\r\n        case PRODUCT_DETAILS_FAILED:\r\n            return {loading:false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state={}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return {loading:true}\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return {loading:false, success: true}\r\n        case PRODUCT_DELETE_FAILED:\r\n            return {loading:false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state={}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return {loading:true}\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return {loading:false, success: true, product: action.payload}\r\n        case PRODUCT_CREATE_FAILED:\r\n            return {loading:false, error: action.payload}\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state={product:{}}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return {loading:true}\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return {loading:false, success: true, product: action.payload}\r\n        case PRODUCT_UPDATE_FAILED:\r\n            return {loading:false, error: action.payload}\r\n        case PRODUCT_UPDATE_RESET:\r\n            return {product:{}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReviewReducer = (state={}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return {loading:true}\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return {loading:false, success: true}\r\n        case PRODUCT_CREATE_REVIEW_FAILED:\r\n            return {loading:false, error: action.payload}\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state={products:[]}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return {loading:true, products:[]}\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return {loading:false, products: action.payload}\r\n        case PRODUCT_TOP_FAILED:\r\n            return {loading:false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","import {CART_ADD_ITEM,\r\n        CART_REMOVE_ITEM, \r\n        CART_SAVE_SHIPPING_ADDRESS,\r\n        CART_SAVE_PAYMENT_METHOD,\r\n        CART_CLEAR_ITEMS\r\n } from '../constants/cartConstants'\r\n\r\n\r\nexport const cartReducer = (state={cartItems:[], shippingAddress: {}}, action) => {\r\n    switch(action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if(existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => \r\n                        x.product === existItem.product ? item : x\r\n                    )\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {USER_LOGIN_REQUEST,\r\n        USER_LOGIN_SUCCESS,\r\n        USER_LOGIN_FAIL,\r\n        USER_LOGOUT,\r\n        USER_REGISTER_REQUEST,\r\n        USER_REGISTER_SUCCESS,\r\n        USER_REGISTER_FAIL,\r\n        USER_DETAILS_REQUEST,\r\n        USER_DETAILS_SUCCESS,\r\n        USER_DETAILS_FAIL,\r\n        USER_DETAILS_RESET,\r\n        USER_UPDATE_PROFILE_REQUEST,\r\n        USER_UPDATE_PROFILE_SUCCESS,\r\n        USER_UPDATE_PROFILE_FAIL,\r\n        USER_UPDATE_PROFILE_RESET,\r\n        USER_LIST_REQUEST,\r\n        USER_LIST_SUCCESS,\r\n        USER_LIST_FAIL,\r\n        USER_LIST_RESET,\r\n        USER_DELETE_REQUEST,\r\n        USER_DELETE_SUCCESS,\r\n        USER_DELETE_FAIL,\r\n        USER_UPDATE_REQUEST,\r\n        USER_UPDATE_SUCCESS,\r\n        USER_UPDATE_FAIL,\r\n        USER_UPDATE_RESET,\r\n        \r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer =  (state={}, action) => {\r\n    switch(action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return {loading:true}\r\n        case USER_LOGIN_SUCCESS:\r\n            return {loading:false, userInfo: action.payload}\r\n        case USER_LOGIN_FAIL:\r\n            return {loading:false, error: action.payload}\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer =  (state={}, action) => {\r\n    switch(action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return {loading:true}\r\n        case USER_REGISTER_SUCCESS:\r\n            return {loading:false, userInfo: action.payload}\r\n        case USER_REGISTER_FAIL:\r\n            return {loading:false, error: action.payload}\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer =  (state={ user:{}}, action) => {\r\n    switch(action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return {...state, loading:true}\r\n        case USER_DETAILS_SUCCESS:\r\n            return {loading:false, user: action.payload}\r\n        case USER_DETAILS_FAIL:\r\n            return {loading:false, error: action.payload}\r\n        case USER_DETAILS_RESET:\r\n            return {user:{}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer =  (state={}, action) => {\r\n    switch(action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return {loading:true}\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return {loading:false, success:true, userInfo: action.payload}\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return {loading:false, error: action.payload}\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer =  (state={users:[]}, action) => {\r\n    switch(action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return {loading:true}\r\n        case USER_LIST_SUCCESS:\r\n            return {loading:false, users: action.payload}\r\n        case USER_LIST_FAIL:\r\n            return {loading:false, error: action.payload}\r\n        case USER_LIST_RESET:\r\n            return {user:[]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer =  (state={}, action) => {\r\n    switch(action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return {loading:true}\r\n        case USER_DELETE_SUCCESS:\r\n            return {loading:false, success: true}\r\n        case USER_DELETE_FAIL:\r\n            return {loading:false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer =  (state={user:{}}, action) => {\r\n    switch(action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return {loading:true}\r\n        case USER_UPDATE_SUCCESS:\r\n            return {loading:false, success: true}\r\n        case USER_UPDATE_FAIL:\r\n            return {loading:false, error: action.payload}\r\n        case USER_UPDATE_RESET:\r\n            return {user:{}}\r\n        default:\r\n            return state\r\n    }\r\n}","import {ORDER_CREATE_REQUEST,\r\n        ORDER_CREATE_SUCCESS,\r\n        ORDER_CREATE_FAIL,\r\n        ORDER_CREATE_RESET,\r\n        ORDER_DETAILS_REQUEST,\r\n        ORDER_DETAILS_SUCCESS,\r\n        ORDER_DETAILS_FAIL,\r\n        ORDER_PAY_REQUEST,\r\n        ORDER_PAY_SUCCESS,\r\n        ORDER_PAY_FAIL,\r\n        ORDER_PAY_RESET,\r\n        ORDER_LIST_MY_REQUEST,\r\n        ORDER_LIST_MY_SUCCESS,\r\n        ORDER_LIST_MY_FAIL,\r\n        ORDER_LIST_MY_RESET,\r\n        ORDER_LIST_REQUEST,\r\n        ORDER_LIST_SUCCESS,\r\n        ORDER_LIST_FAIL,\r\n        ORDER_DELIVER_REQUEST,\r\n        ORDER_DELIVER_SUCCESS,\r\n        ORDER_DELIVER_FAIL,\r\n        ORDER_DELIVER_RESET,\r\n } from '../constants/orderConstants'\r\n\r\n export const orderCreateReducer = (state={}, action) => {\r\n     switch(action.type) {\r\n         case ORDER_CREATE_REQUEST:\r\n             return {\r\n                 loading:true\r\n             }\r\n        case ORDER_CREATE_SUCCESS:\r\n             return {\r\n                 loading:false,\r\n                 success:true,\r\n                 order:action.payload\r\n             }\r\n        case ORDER_CREATE_FAIL:\r\n             return {\r\n                 loading:false,\r\n                 error:action.payload\r\n             }\r\n        case ORDER_CREATE_RESET:\r\n             return {}\r\n        default:\r\n            return state\r\n     }\r\n }\r\n\r\nexport const orderDetailsReducer = (state={loading: true, orderItems:[], shippingAddress:{}}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading:true\r\n            }\r\n       case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                order:action.payload\r\n            }\r\n       case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading:false,\r\n                error:action.payload\r\n            }\r\n       default:\r\n           return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state={}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading:true\r\n            }\r\n       case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                success:true\r\n            }\r\n       case ORDER_PAY_FAIL:\r\n            return {\r\n                loading:false,\r\n                error:action.payload\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n       default:\r\n           return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state={orders:[]}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading:true \r\n            }\r\n       case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                orders:action.payload\r\n            }\r\n       case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading:false,\r\n                error:action.payload\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders:[]\r\n            }\r\n       default:\r\n           return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state={orders:[]}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading:true \r\n            }\r\n       case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                orders:action.payload\r\n            }\r\n       case ORDER_LIST_FAIL:\r\n            return {\r\n                loading:false,\r\n                error:action.payload\r\n            }\r\n       default:\r\n           return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state={}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading:true\r\n            }\r\n       case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                success:true\r\n            }\r\n       case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading:false,\r\n                error:action.payload\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n       default:\r\n           return state\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './store'    ;\nimport axios from 'axios'\n\naxios.defaults.baseURL = 'http://127.0.0.1:8000'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}